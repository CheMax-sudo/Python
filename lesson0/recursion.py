#Рекурсия — это способ решения задачи, при котором она разбивается на подзадачи того же типа,
#что и исходная задача. При этом решение каждой подзадачи происходит через вызов функции самой
#себя. В конечном итоге эти подзадачи становятся настолько простыми, что их можно решить без 
#дальнейшего разбиения.


#Так выглядит функция summa. Функция решает задачу нахождения суммы всех включенных чисел в n.
#То есть если n = 5. Сумма от 1 до 5 = 1+2+3+4+5=15
def summa(n):
    x = 0
    for n in range(1, n+1):
        x += n
    return x

#x = summa(5)
#print(x)

#Так выглядит функция summa c Рекурсивным способом решения задачи с помощью вызова самой себя.
def summa(n):
    if n == 1:
        return 1
    return n + summa(n-1)

x = summa(5)


#Так выглядит функция fact. Функция решает задачу нахождения факториала от числа n.
def fact(n):
    f = 1
    for i in range(2, n+1):
        f*=i
    return f
#print(fact(5))

#Так выглядит функция fact c Рекурсивным способом решения задачи с помощью вызова самой себя.
def fact(n):
    if n == 1:                             #Остановка рекурсии. Базовый случай. Условие if необходимо для проверки 
       print('Функция',n ,'попала в if')   #равенства n к 1, если условие выполняется то с помощью команды return n
       return n                                      
                   
                                                                               
    print('Функция', n,'мимо if прошла')
    return fact(n-1)*n
       
#x = fact(5)
#print(x)

     